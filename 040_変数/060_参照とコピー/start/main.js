/**
 * プリミティブ型とオブジェクト（型）
 * データ型にはこの２種類が存在する
 * 
 * 
 * プリミティブ型
 * ・変数には「値」が格納される
 * ・一度作成すると、その値を変更することはできない
 * ・immutable(不変)な性質を持つ
 * 
 * 
 * letで再代入できるから不変ではないのでは・・・？
 * 　↓↓
*/

// メモリ空間
let a = 'hello';
// まず文字列helloが定義されると、アドレス「1番地」に格納されるイメージ。
// 変数aが「hello」という文字列が格納されているアドレスに参照を保持している状態。

a = 'bye';
// helloとは別のアドレスにbyeが格納される。
// 変数aに再代入すると、aの「参照」がbyeに向けて変更される
// 初めに定義したhelloそのものは変更されない

// 再代入：変数aの持つ値への参照が切り替わる



/**
 * オブジェクト型
 * ・変数には「参照：が格納される
 * ・値を変更することができる
 * ・mutable(可変)な性質を持つ
 * 
*/

// メモリ空間
let a = {
  prop: 'hello',
}
/**
 * →：参照を保持
 * 
 * a　→　{...}への参照
 * {....}　→　{prop}プロパティ　（オブジェクトが格納している実態が存在しているアドレスへ参照帆保持している）
 * {prop}プロパティ　→　'hello'
 * 
 * hello：メモリ空間のどこかに値が存在していて、それへの参照をオブジェクトは保持している
 * 
 * オブジェクトの中身を変えても、変数→オブジェクトへの参照先は変わらないためオブジェクトはミュータブルと言える。
 * 
 * 
 * オブジェクト：名前（プロパティ）付きの参照を管理する入れ物
*/