/**
 * スコープ
 * 
 * 実行中のコードから、値と式が「参照」できる範囲のこと
 * 
 * jsには５種類のスコープが存在する
 * ・グローバルスコープ
 * ・スクリプトスコープ
 * ・関数スコープ
 * ・ブロックスコープ
 * ・モジュールスコール
*/



/**
 * グローバルスコープ
*/

let a = 0;
var b = 0;
function c(){}

// debugger; // ブラウザで開発ツールを開いているとここで実行が一次停止する

/**
 * 開発ツールで確認すると
 * 
 * Scope > Script のところにa:0
 * Scope > Globalのところにb:0, c: f c()
 * 
 * 
 * var, functionで宣言した場合：「ウィンドウオブジェクト」のプロパティとして値が保持される
 * let, constで宣言した場合：「スクリプト」のほうに表示される
*/



console.log(window.b); // こういう書き方はしない
console.log(b);
// グローバルオブジェクトは省略して記載することができる。
// ウィンドウオブジェクトそれ自体がブローバルスコープとなっている。
window.d = 1;
console.log(d);




window.e = 10;
let e = 20;
console.log(e); // 20
// スコープチェーンという考え方に基づいている。どちらの値が参照されるか。






/**
 * まとめ
 * 
 * ウィンドウオブジェクト　＝　グローバルスコープ
 * 一般的にはスクリプトスコープもグローバルスコープ呼ばれる（どちらも一般的には使い勝手が同じなので）
*/